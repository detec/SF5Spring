<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org-openbox-sf5</groupId>
  <artifactId>SF5Spring</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Openbox SF5 settings editor - Spring </name>
  
	<properties>
  		<spring.version>5.1.0.RELEASE</spring.version>
  		<spring.security.version>4.2.0.RELEASE</spring.security.version>
  		<hibernate.version>5.3.6.Final</hibernate.version>
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<jackson.version>2.8.4</jackson.version>
  		<jersey.version>2.25.1</jersey.version>
  		<slf4j.version>1.7.21</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <junit.jupiter>5.0.1</junit.jupiter>
	</properties>
  	 

  	 
<build>

<resources>
	<resource>
    	<directory>src/main/java</directory> <!-- This excludes webapp resources from copying to classes! -->
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
	<resource>
    	<directory>src/main/resources</directory>
    	<filtering>true</filtering>
  	</resource>
</resources>
    


<!-- Seems like it causes errors when updating maven project 
declared explicitly so Spring config files can be placed next to their corresponding JUnit test class
-->
	
	<defaultGoal>install</defaultGoal>
		<testResources>
			<testResource>
		    	<directory>${project.basedir}/src/test/java</directory>
		  	</testResource>
		  	<testResource>
		    	<directory>${project.basedir}/src/test/resources</directory>
		    	<filtering>true</filtering>
		   	</testResource>
		</testResources>    
    
<!--   <pluginManagement>   -->
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
<!--           <compilerArgs> -->
<!--           <arg>-verbose</arg> -->
<!--           <arg>-Xlint:all,-options,-path</arg> -->
<!--           </compilerArgs> -->
        </configuration>
    </plugin>
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-plugin</artifactId>
		<version>2.22.0</version>
		<configuration>
			<includes>
				<include>**/*Tests.java</include>
			</includes>
			<excludes>
            	<exclude>**/*IT.java</exclude>
            </excludes>
		</configuration>

	</plugin>
				  
	 <plugin>
		<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
          <encoding>UTF-8</encoding>
        </configuration>
     </plugin>

     <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
        	<warSourceDirectory>src/main/webapp</warSourceDirectory>
          	<failOnMissingWebXml>false</failOnMissingWebXml>
			<packagingExcludes>web.xml</packagingExcludes> <!-- In container test it says duplicate context, it still includes web.xml (( -->
        	<warName>${rp.build.warname}</warName>
           	<archive>
        		<manifestEntries>
        			<Dependencies>org.hibernate</Dependencies>
        		</manifestEntries>
        	</archive> 
		<webResources>
<!-- 			<resource>
                <filtering>true</filtering> THIS IS IMPORTANT! It tells maven to replace your variables with the properties values
                <directory>src/main/resources</directory>
                <targetPath>WEB-INF/classes/</targetPath>
                <includes>
                	<include>**/hibernate.cfg.xml</include> the path to hibernate.cfg.xml
                </includes>
            </resource> -->

            <resource>
            	<filtering>true</filtering> <!-- THIS IS IMPORTANT! It tells maven to replace your variables with the properties values -->
            	<directory>src/main/resources/spring</directory>
             	<targetPath>WEB-INF</targetPath>
             	<includes>
					<include>*.xml</include>
                </includes>
            </resource>
            
<!--             <resource>
            	<filtering>true</filtering> THIS IS IMPORTANT! It tells maven to replace your variables with the properties values
            	<directory>src/main/resources/spring/${property.placeholder}/</directory>
             	<targetPath>WEB-INF/classes/</targetPath>
             	<includes>
					<include>application.properties</include>
                </includes>
            </resource> -->
            <resource>
            	<filtering>true</filtering>
                <directory>src/main/resources/web-inf-filter/</directory>
                <targetPath>WEB-INF/</targetPath>
                <includes>
		        	<include>**/jboss-web.xml</include>
        	    </includes>
            </resource> 
            
        </webResources>
        	
        </configuration>
      </plugin>
      
	<plugin>
    	<groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
<!--         	<url>http://localhost:8080/manager/text</url> -->
        	<server>TomcatServer</server>
        	<username>admin</username>
        	<password>admin</password>
        	<update>true</update>
        	<!-- If you are using project.build.finalName to change the name of your WAR file, you can use that value when you configure the context path as well.
        	https://tomcat.apache.org/maven-plugin-trunk/tomcat7-maven-plugin/usage.html
        	 -->
        	<path>/${rp.build.warname}</path>

        	
<!--         	<warFile>${project.build.directory}/${rp.build.warname}.war</warFile> -->
        </configuration>
	</plugin>
 		
<!--  	<plugin>
    	<groupId>org.jvnet.jax-ws-commons</groupId>
        <artifactId>jaxws-maven-plugin</artifactId>
        <version>2.3</version>
        <executions>
         	<execution>
              	<id>generate-client</id>
                <phase>generate-sources</phase>
                <goals>
                 	<goal>wsimport</goal>
                </goals>
                <configuration>
        	    	<wsdlUrls>
            	   		<wsdlUrl>http://localhost:8080/OpenboxSF5Service?wsdl</wsdlUrl>
                    </wsdlUrls>
			        <verbose>true</verbose>
                    <sourceDestDir>${basedir}/src/test/java</sourceDestDir>
                    <target>2.2</target>

                    </configuration>
                </execution>
                  
            </executions>
          </plugin> -->
     
    </plugins> 

<!--       	<pluginManagement>
    		<plugins>
      			<plugin>
    				<groupId>org.eclipse.m2e</groupId>
    				<artifactId>lifecycle-mapping</artifactId>
    				<version>1.0.0</version>
    				<configuration>
    					<lifecycleMappingMetadata>
    						<pluginExecutions>
    							<pluginExecution>
    								<pluginExecutionFilter>
    									<groupId>
    										org.jvnet.jax-ws-commons
    									</groupId>
    									<artifactId>
    										jaxws-maven-plugin
    									</artifactId>
    									<versionRange>
    										[2.3,)
    									</versionRange>
    									<goals>
    										<goal>wsimport</goal>
    									</goals>
    								</pluginExecutionFilter>
    								<action>
    									<ignore></ignore>
    								</action>
    							</pluginExecution>
    						</pluginExecutions>
    					</lifecycleMappingMetadata>
    				</configuration>
    			</plugin>
    		</plugins>
    	</pluginManagement> -->
	</build>
  
<!-- Different profiles properties
http://stackoverflow.com/questions/29704901/configure-spring-4-propertysourcesplaceholderconfigurer-with-custom-classpathres
 -->  
<profiles>
	<profile>
  	<id>test</id>
  		<activation>
            <activeByDefault>false</activeByDefault>
        </activation>  		   	 
	<properties>
  		<db.jdbcUrl>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</db.jdbcUrl>
  		<db.driver>org.h2.Driver</db.driver>
  		<db.user>sa</db.user>
  		<db.password></db.password>
        <db.dialect>H2Dialect</db.dialect>
        <db.hbm2ddl>update</db.hbm2ddl> 
  		<rp.build.warname>SF5Spring-test</rp.build.warname>
  		<property.placeholder>test</property.placeholder>
  	</properties>
  	
  	<!-- http://stackoverflow.com/questions/20916581/how-to-do-in-container-testing-of-a-web-app-in-spring -->
  	<build>
    	<plugins>
             <plugin>
             <groupId>org.codehaus.cargo</groupId>
             <artifactId>cargo-maven2-plugin</artifactId>
             <version>1.6.10</version>
             	<configuration>
                     <container>
						    <containerId>wildfly13x</containerId>
	                     	<zipUrlInstaller>
								<url>http://download.jboss.org/wildfly/14.0.1.Final/wildfly-14.0.1.Final.zip</url>
							</zipUrlInstaller>
						    
						    <dependencies>
                				<dependency>
                    				<groupId>org.postgresql</groupId>
                    				<artifactId>postgresql</artifactId>
                 				</dependency>
                 				<dependency>
                 					<groupId>com.h2database</groupId>
                 					<artifactId>h2</artifactId>
                 				</dependency>
            				</dependencies>
                     </container>
                     <configuration>
                     	<properties>
                             <cargo.servlet.port>8080</cargo.servlet.port>
                             <cargo.protocol>http</cargo.protocol>
                             <cargo.datasource.datasource.ds1>
                             		cargo.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1|
                             		cargo.datasource.driver=org.h2.Driver|
                             		cargo.datasource.username=sa|
                             		cargo.datasource.password=''|
                             		cargo.datasource.jndi=jboss/datasources/PostgreSQLDS
                             </cargo.datasource.datasource.ds1>                  
                    	</properties>
                	</configuration>
                		<deployables>
                		<deployable>
                			<pingURL>http://localhost:8080/${rp.build.warname}/</pingURL>
	                		<pingTimeout>120000</pingTimeout> <!-- 2 min -->
                		 	<properties>
                		     	<context>${rp.build.warname}</context>
              				</properties>
                		</deployable>
                		</deployables>
                </configuration>

                
                
                <executions>
                     <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                        <goal>start</goal>
                    </goals>
                    </execution>
                    	<execution>
                    	<id>stop-container</id>
                    	<phase>post-integration-test</phase>
                    	<goals>
                    		<goal>stop</goal>
                    	</goals>
                	</execution>
            	</executions>
        	</plugin>
             	<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>	
					<version>2.22.0</version>
					<executions>
 				       	<execution>
            			<phase>integration-test</phase>
            			<goals>
               				<goal>test</goal>
            			</goals>
            			<configuration>
               				<excludes>
                  				<exclude>**/*Tests.java</exclude>
               				</excludes>
            				<includes>
								<include>**/*IT.java</include>
							</includes>
																			
            			</configuration>
        		</execution> 
      		</executions>
		</plugin>
 	</plugins>
    </build>	
	</profile>
	<profile>
  		<id>prod</id>
  		<activation>
            <activeByDefault>false</activeByDefault>
        </activation>  		 
		<properties>
			<property.placeholder>prod</property.placeholder>
		</properties>
	</profile>
	<profile>
  		<id>dev</id>
  		<activation>
            <activeByDefault>false</activeByDefault>
        </activation>
		<properties>
  			<property.placeholder>dev</property.placeholder>
  		</properties>
	</profile>
	<profile>
	 	<id>openshift</id>
         	<activation>
            	<activeByDefault>true</activeByDefault>
        	</activation>
        	<properties>
        		<property.placeholder>openshift</property.placeholder>
        	</properties>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-war-plugin</artifactId>
                  <version>3.2.2</version>
                  <configuration>
                     <outputDirectory>deployments</outputDirectory>
                     <warName>ROOT</warName>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
</profiles>
  
<dependencies>

	<!-- Spring -->
	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context</artifactId>
  		<version>${spring.version}</version>
  	</dependency>
  	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
 	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-beans</artifactId>
    	<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-tx</artifactId>
    	<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-oxm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
	
	<dependency>
    	<groupId>org.springframework.ws</groupId>
    	<artifactId>spring-ws-core</artifactId>
    	<version>2.4.0.RELEASE</version>
	</dependency>
	
	<!-- Spring security -->
    <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${spring.security.version}</version>
	</dependency>
 	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
 	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-aspects</artifactId>
    	<version>${spring.security.version}</version>
	</dependency>
	<dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-taglibs</artifactId>
    	<version>${spring.security.version}</version>
	</dependency>

    <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.3.0</version>
    </dependency>
    <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>2.3.0.1</version>
    </dependency>
    <dependency>
        <groupId>org.glassfish.jaxb</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>2.3.0.1</version>
    </dependency>
		
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp.jstl</groupId>
		<artifactId>javax.servlet.jsp.jstl-api</artifactId>
		<version>1.2.2</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp</groupId>
		<artifactId>jsp-api</artifactId>
		<version>2.2.1-b03</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.apache.taglibs</groupId>
		<artifactId>taglibs-standard-impl</artifactId>
		<version>1.2.5</version>
		<scope>provided</scope>
	</dependency>

	<!--  or we get package javax.ws.rs does not exist -->
	<dependency>
    	<groupId>javax</groupId>
    	<artifactId>javaee-web-api</artifactId>
    	<version>8.0</version>
    	<scope>provided</scope>
	</dependency>
	<dependency>
    	<groupId>org.glassfish</groupId>
    	<artifactId>javax.json</artifactId>
    	<version>1.1.2</version>
	</dependency>
  	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<version>1.4.197</version>
	</dependency>
	<dependency>
		<groupId>org.postgresql</groupId>
		<artifactId>postgresql</artifactId>
		<version>42.2.5</version>
	</dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-agroal</artifactId>
      <version>${hibernate.version}</version>
      <type>pom</type>
    </dependency>
    
    <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-jpa</artifactId>
        <version>2.1.0.RELEASE</version>
    </dependency>
  
<!--<dependency>
    	<groupId>org.hibernate</groupId>
    	<artifactId>hibernate-entitymanager</artifactId>
    	<version>${hibernate.version}</version>
    	<scope>provided</scope>
	</dependency> -->
	
	<!-- 
	For exclusion
	http://stackoverflow.com/questions/17360000/provider-for-javax-xml-parsers-documentbuilderfactory-cannot-be-found -->
    <dependency>
        <groupId>javax.persistence</groupId>
        <artifactId>javax.persistence-api</artifactId>
        <version>2.2</version>
    </dependency>


	<!-- Jackson dependencies -->
	<dependency>
    	<groupId>com.fasterxml.jackson.core</groupId>
    	<artifactId>jackson-databind</artifactId>
    	<version>${jackson.version}</version>
<!--     	<scope>provided</scope> -->
	</dependency>

	<dependency>
		<groupId>com.fasterxml.jackson.jaxrs</groupId>
		<artifactId>jackson-jaxrs-json-provider</artifactId>
		<version>${jackson.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.jaxrs</groupId>
		<artifactId>jackson-jaxrs-xml-provider</artifactId>
		<version>${jackson.version}</version>
		<scope>test</scope>
	</dependency>
	<!-- This is only needed for Spring -->
	<dependency>
		<groupId>com.fasterxml.jackson.dataformat</groupId>
		<artifactId>jackson-dataformat-xml</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	<!-- From http://stackoverflow.com/questions/22950542/pretty-printing-xml-with-jackson-library -->
	<dependency>
		<groupId>org.codehaus.woodstox</groupId>
		<artifactId>woodstox-core-asl</artifactId>
		<version>4.4.1</version>
	</dependency>
	
	
	<!-- This is needed to run Hibernate validator -->
	<dependency>
		<groupId>org.glassfish.web</groupId>
		<artifactId>el-impl</artifactId>
		<version>2.2</version>
	</dependency>
	
	<!-- Jersey dependencies -->
	<dependency>
		<groupId>org.glassfish.jersey.core</groupId>
		<artifactId>jersey-client</artifactId>
		<version>${jersey.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.glassfish.jersey.media</groupId>
		<artifactId>jersey-media-json-jackson</artifactId>
		<version>${jersey.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.glassfish.jersey.media</groupId>
		<artifactId>jersey-media-json-processing</artifactId>
		<version>${jersey.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.glassfish.jersey.media</groupId>
		<artifactId>jersey-media-multipart</artifactId>
		<version>${jersey.version}</version>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>org.glassfish.hk2</groupId>
		<artifactId>hk2-api</artifactId>
		<version>2.5.0-b43</version>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>5.3.2.Final</version>
	</dependency>
	<dependency>
	    <groupId>org.glassfish</groupId>
	    <artifactId>javax.el</artifactId>
	    <version>3.0.0</version>
	</dependency>	
	
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.1.0</version>
		<scope>provided</scope>
	</dependency>
 
     <!-- Unit tests -->
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
    </dependency>     
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.jupiter}</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.jupiter}</version>
        <scope>test</scope>
    </dependency> 
    <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-runner</artifactId>
        <version>1.0.1</version>
        <scope>test</scope>
        <exclusions>
            <exclusion>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
            </exclusion>
        </exclusions>
    </dependency>
    <dependency>
        <groupId>com.github.sbrannen</groupId>
        <artifactId>spring-test-junit5</artifactId>
        <version>1.0.0</version>
        <scope>test</scope>
    </dependency>
	<dependency>
		<groupId>org.assertj</groupId>
		<artifactId>assertj-core</artifactId>
		<version>3.2.0</version>
	</dependency>
	 
  
	<dependency>
   		<groupId>javax.el</groupId>
   		<artifactId>javax.el-api</artifactId>
 		<version>3.0.0</version>
 		<scope>test</scope>
	</dependency> 
	<dependency>
		<groupId>javax.transaction</groupId>
		<artifactId>javax.transaction-api</artifactId>
		<version>1.2</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.ejb</groupId>
		<artifactId>javax.ejb-api</artifactId>
		<version>3.2</version>
		<scope>provided</scope>
	</dependency>
 
    <dependency>
        <groupId>javax.xml.ws</groupId>
        <artifactId>jaxws-api</artifactId>
        <version>2.3.1</version>
    </dependency> 
	
	<!-- Aspects -->
	<dependency>
	    <groupId>org.aspectj</groupId>
	    <artifactId>aspectjrt</artifactId>
	    <version>1.8.9</version>
	</dependency>
	<dependency>
    	<groupId>org.aspectj</groupId>
    	<artifactId>aspectjweaver</artifactId>
    	<version>1.8.9</version>
	</dependency>
	

        <!-- Logging  -->

     <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
     </dependency>
     <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <version>${slf4j.version}</version>
     </dependency>
     <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
         <version>${slf4j.version}</version>
     </dependency>
     <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <version>${log4j.version}</version>
     </dependency>
</dependencies>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>
</project>