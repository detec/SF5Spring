<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.openbox.sf5</groupId>
  <artifactId>SF5Spring</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Openbox SF5 settings editor - Spring </name>
  
	<properties>
  		<spring.version>4.2.4.RELEASE</spring.version>
  		<spring.security.version>4.0.3.RELEASE</spring.security.version>
  		<hibernate.version>5.0.7.Final</hibernate.version> <!-- Comply with JavaEE 6 -->
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<jackson.version>2.5.4</jackson.version>
  		<jersey.version>2.22.1</jersey.version>
  		<resteasy.version>3.0.14.Final</resteasy.version>
  		<moxy.version>2.6.2</moxy.version>
	</properties>
  	 
<!--   	 <repositories>	
  		<repository>
    	<id>com.springsource.repository.bundles.release</id>
    	<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
    	<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
  	</repositories> -->
  	
<!--   	<repositories>	
	<repository>
    	<id>codelds</id>
    	<url>https://code.lds.org/nexus/content/groups/main-repo</url>
    </repository>
</repositories> -->
  	 
  <build>
<!--     <sourceDirectory>src</sourceDirectory> -->
<resources>
	<resource>
    	<directory>src/main/java</directory> <!-- This excludes webapp resources from copying to classes! -->
        <excludes>
          <exclude>**/*.java</exclude>
          <!-- exclude default, unchanged hibernate.cfg.xml -->
<!--           <exclude>**/hibernate.cfg.xml</exclude> -->
        </excludes>
      </resource>
	<resource>
    	<directory>src/main/resources</directory>
    	<filtering>true</filtering>
  			 <!-- <includes>
  			 	<include>**web-inf-filter/jboss-web.xml</include>
  			 </includes> -->
<!--   			 <includes>
  			 	<include>**eclipse-copy-webinf/jboss-web.xml</include>
  			 </includes>
  		<excludes>
  			<exclude>**web-inf-filter/jboss-web.xml</exclude>
  		</excludes> -->
  	</resource>
</resources>
    


<!-- Seems like it causes errors when updating maven project 
declared explicitly so Spring config files can be placed next to their corresponding JUnit test class
-->
	
	<defaultGoal>install</defaultGoal>
		<testResources>
			<testResource>
		    	<directory>${project.basedir}/src/test/java</directory>
		  	</testResource>
		  	<testResource>
		    	<directory>${project.basedir}/src/test/resources</directory>
		    	<filtering>true</filtering>
		   	</testResource>
		</testResources>    
    
<!--   <pluginManagement>   -->
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
<!--           <compilerArgs> -->
<!--           <arg>-verbose</arg> -->
<!--           <arg>-Xlint:all,-options,-path</arg> -->
<!--           </compilerArgs> -->
        </configuration>
    </plugin>
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-plugin</artifactId>
		<version>2.18.1</version>
		<configuration>
			<includes>
				<include>**/*Tests.java</include>
			</includes>
			<excludes>
            	<exclude>**/*IT.java</exclude>
            </excludes>
		</configuration>

	</plugin>
				  
	 <plugin>
		<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
          <encoding>UTF-8</encoding>
        </configuration>
     </plugin>

     <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
        	<warSourceDirectory>src/main/webapp</warSourceDirectory>
          	<failOnMissingWebXml>false</failOnMissingWebXml>
			<packagingExcludes>web.xml</packagingExcludes> <!-- In container test it says duplicate context, it still includes web.xml (( -->
        	<warName>${rp.build.warname}</warName>
		<webResources>
			<resource>
                <filtering>true</filtering> <!-- THIS IS IMPORTANT! It tells maven to replace your variables with the properties values -->
                <directory>src/main/resources</directory>
                <targetPath>WEB-INF/classes/</targetPath>
                <includes>
                	<include>**/hibernate.cfg.xml</include> <!-- the path to hibernate.cfg.xml -->
                </includes>
            </resource>

            <resource>
            	<filtering>true</filtering> <!-- THIS IS IMPORTANT! It tells maven to replace your variables with the properties values -->
            	<directory>src/main/resources/spring</directory>
             	<targetPath>WEB-INF</targetPath>
             	<includes>
					<include>*.xml</include>
                </includes>
            </resource>
            
            <resource>
            	<filtering>true</filtering> <!-- THIS IS IMPORTANT! It tells maven to replace your variables with the properties values -->
            	<directory>src/main/resources/spring/${property.placeholder}/</directory>
             	<targetPath>WEB-INF/classes/</targetPath>
             	<includes>
					<include>application.properties</include>
                </includes>
            </resource>
            <resource>
            	<filtering>true</filtering>
                <directory>src/main/resources/web-inf-filter/</directory>
                <targetPath>WEB-INF/</targetPath>
                <includes>
		        	<include>**/jboss-web.xml</include>
        	    </includes>
            </resource> 
            
        </webResources>
        	
        </configuration>
      </plugin>
      
	<plugin>
    	<groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
<!--         	<url>http://localhost:8080/manager/text</url> -->
        	<server>TomcatServer</server>
        	<username>admin</username>
        	<password>admin</password>
        	<update>true</update>
        	<!-- If you are using project.build.finalName to change the name of your WAR file, you can use that value when you configure the context path as well.
        	https://tomcat.apache.org/maven-plugin-trunk/tomcat7-maven-plugin/usage.html
        	 -->
        	<path>/${rp.build.warname}</path>
        	
<!--         	<warFile>${project.build.directory}/${rp.build.warname}.war</warFile> -->
        </configuration>
	</plugin>
 		
<!--  	<plugin>
    	<groupId>org.jvnet.jax-ws-commons</groupId>
        <artifactId>jaxws-maven-plugin</artifactId>
        <version>2.3</version>
        <executions>
         	<execution>
              	<id>generate-client</id>
                <phase>generate-sources</phase>
                <goals>
                 	<goal>wsimport</goal>
                </goals>
                <configuration>
        	    	<wsdlUrls>
            	   		<wsdlUrl>http://localhost:8080/${rp.build.warname}/jaxws/OpenboxSF5Service?wsdl</wsdlUrl>
                    </wsdlUrls>
			        <verbose>true</verbose>
                    <sourceDestDir>${basedir}/src/test/java</sourceDestDir>
                    <target>2.2</target>

                    </configuration>
                </execution>
                  
            </executions>
          </plugin> -->
     
    </plugins> 
<!--     </pluginManagement> -->
  <!--     	<pluginManagement>
    		<plugins>
      			<plugin>
    				<groupId>org.eclipse.m2e</groupId>
    				<artifactId>lifecycle-mapping</artifactId>
    				<version>1.0.0</version>
    				<configuration>
    					<lifecycleMappingMetadata>
    						<pluginExecutions>
    							<pluginExecution>
    								<pluginExecutionFilter>
    									<groupId>
    										org.jvnet.jax-ws-commons
    									</groupId>
    									<artifactId>
    										jaxws-maven-plugin
    									</artifactId>
    									<versionRange>
    										[2.3,)
    									</versionRange>
    									<goals>
    										<goal>wsimport</goal>
    									</goals>
    								</pluginExecutionFilter>
    								<action>
    									<ignore></ignore>
    								</action>
    							</pluginExecution>
    						</pluginExecutions>
    					</lifecycleMappingMetadata>
    				</configuration>
    			</plugin>
    		</plugins>
    	</pluginManagement> -->
	</build>
  
<!-- Different profiles properties
http://stackoverflow.com/questions/29704901/configure-spring-4-propertysourcesplaceholderconfigurer-with-custom-classpathres
 -->  
<profiles>
	<profile>
  	<id>test</id>
  		<activation>
            <activeByDefault>false</activeByDefault>
        </activation>  		   	 
	<properties>
  		<db.jdbcUrl>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</db.jdbcUrl>
  		<db.driver>org.h2.Driver</db.driver>
  		<db.user>sa</db.user>
  		<db.password></db.password>
        <db.dialect>H2Dialect</db.dialect>
        <db.hbm2ddl>update</db.hbm2ddl> 
  		<rp.build.warname>SF5Spring-test</rp.build.warname>
  		<property.placeholder>test</property.placeholder>
  	</properties>
  	
  	<!-- http://stackoverflow.com/questions/20916581/how-to-do-in-container-testing-of-a-web-app-in-spring -->
  	<build>
    	<plugins>
             <plugin>
             <groupId>org.codehaus.cargo</groupId>
             <artifactId>cargo-maven2-plugin</artifactId>
             <version>1.4.18</version>
             	<configuration>
                     <container>
<!--                          <containerId>tomcat8x</containerId>
						      <zipUrlInstaller>
						        <url>http://apache.ip-connect.vn.ua/tomcat/tomcat-8/v8.0.30/bin/apache-tomcat-8.0.30-windows-x64.zip</url>
						      </zipUrlInstaller> -->
<!-- 						    <containerId>jboss75x</containerId>
						    <zipUrlInstaller>
						    	ZIP should be in the temp folder with other pre-downloaded archives.
						    	<url>https://access.cdn.redhat.com/jboss-eap-6.4.0.zip</url>
						    </zipUrlInstaller> -->
						    <containerId>wildfly10x</containerId>
	                     	<zipUrlInstaller>
								<url>http://download.jboss.org/wildfly/10.0.0.Final/wildfly-10.0.0.Final.zip</url>
<!-- 								<url>http://download.jboss.org/wildfly/9.0.2.Final/wildfly-9.0.2.Final.zip</url> -->
							</zipUrlInstaller>
						    
						    <dependencies>
                				<dependency>
                    				<groupId>org.postgresql</groupId>
                    				<artifactId>postgresql</artifactId>
                 				</dependency>
                 				<dependency>
                 					<groupId>com.h2database</groupId>
                 					<artifactId>h2</artifactId>
                 				</dependency>
            				</dependencies>
                     </container>
                     <configuration>
                     	<properties>
                             <cargo.servlet.port>8080</cargo.servlet.port>
                             <cargo.protocol>http</cargo.protocol>
<!--                              <cargo.tomcat.httpSecure>false</cargo.tomcat.httpSecure> -->
                             <cargo.datasource.datasource.ds1>
                             		cargo.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1|
                             		cargo.datasource.driver=org.h2.Driver|
                             		cargo.datasource.username=sa|
                             		cargo.datasource.password=''|
                             		cargo.datasource.jndi=jboss/datasources/PostgreSQLDS
                             </cargo.datasource.datasource.ds1>                  
                    	</properties>
                	</configuration>
                		<deployables>
                		<deployable>
                			<pingURL>http://localhost:8080/${rp.build.warname}/</pingURL>
	                		<pingTimeout>120000</pingTimeout> <!-- 2 min -->
                		 	<properties>
                		     	<context>${rp.build.warname}</context>
              				</properties>
                		</deployable>
                		</deployables>
                </configuration>

                
                
                <executions>
                     <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                        <goal>start</goal>
                    </goals>
                    </execution>
                    	<execution>
                    	<id>stop-container</id>
                    	<phase>post-integration-test</phase>
                    	<goals>
                    		<goal>stop</goal>
                    	</goals>
                	</execution>
            	</executions>
        	</plugin>
             	<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>	
					<version>2.18.1</version>
					<executions>
 				       	<execution>
            			<phase>integration-test</phase>
            			<goals>
               				<goal>test</goal>
            			</goals>
            			<configuration>
               				<excludes>
                  				<exclude>**/*Tests.java</exclude>
                  		    	<!-- Should exclude tests that fail in container but OK in IDE (( -->
                   				<exclude>**/jaxws/SettingsServiceIT.java</exclude>

                   				<exclude>**/json/endpoints/BUserServiceIT.java</exclude>
                   				<exclude>**/json/endpoints/SettingsServiceIT.java</exclude>          			
               				</excludes>
            				<includes>
								<include>**/*IT.java</include>
							</includes>
																			
            			</configuration>
        		</execution> 
      		</executions>
		</plugin>
 	</plugins>
    </build>	
	</profile>
	<profile>
  		<id>prod</id>
  		<activation>
            <activeByDefault>false</activeByDefault>
        </activation>  		 
		<properties>
           		<db.jdbcUrl>jdbc:postgresql://localhost:5432/sf5springprod</db.jdbcUrl>
           		<db.driver>org.postgresql.Driver</db.driver>
           		<db.user>sf5jsf</db.user>
           		<db.password>1</db.password>
           		<db.dialect>ProgressDialect</db.dialect>
  				<rp.build.warname>SF5Spring</rp.build.warname>
  				<property.placeholder>prod</property.placeholder>
  				<db.hbm2ddl>update</db.hbm2ddl>
		</properties>
	</profile>
	<profile>
  		<id>dev</id>
  		<activation>
            <activeByDefault>true</activeByDefault>
        </activation>
		<properties>
            <db.jdbcUrl>jdbc:postgresql://localhost:5432/sf5springdev</db.jdbcUrl>
           	<db.driver>org.postgresql.Driver</db.driver>
           	<db.user>sf5jsf</db.user>
           	<db.password>1</db.password>
           	<db.dialect>ProgressDialect</db.dialect>
  			<rp.build.warname>SF5Spring-test</rp.build.warname>
  			<property.placeholder>dev</property.placeholder>
  			<db.hbm2ddl>update</db.hbm2ddl>
  		</properties>
	</profile>
</profiles>
  
<dependencies>
	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context</artifactId>
  		<version>${spring.version}</version>
  	</dependency>
  	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
 	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-beans</artifactId>
    	<version>${spring.version}</version>
	</dependency>
    <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${spring.security.version}</version>
	</dependency>
 	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
 	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.security.version}</version>
	</dependency>
	<dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-taglibs</artifactId>
    	<version>${spring.security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-tx</artifactId>
    	<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-oxm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	
		
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp.jstl</groupId>
		<artifactId>javax.servlet.jsp.jstl-api</artifactId>
		<version>1.2.1</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet.jsp</groupId>
		<artifactId>jsp-api</artifactId>
		<version>2.2.1-b03</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.apache.taglibs</groupId>
		<artifactId>taglibs-standard-impl</artifactId>
		<version>1.2.5</version>
		<scope>provided</scope>
	</dependency>

	<!--  or we get package javax.ws.rs does not exist -->
	<dependency>
    	<groupId>javax</groupId>
    	<artifactId>javaee-web-api</artifactId>
    	<version>7.0</version>
    	<scope>provided</scope>
	</dependency>
	<dependency>
    	<groupId>org.glassfish</groupId>
    	<artifactId>javax.json</artifactId>
    	<version>1.0.4</version>
	</dependency>
  	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<version>1.4.191</version>
	</dependency>
	<dependency>
		<groupId>org.postgresql</groupId>
		<artifactId>postgresql</artifactId>
		<version>9.4.1207.jre7</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>${hibernate.version}</version>
		
		<exclusions>
        <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
        </exclusion>
    </exclusions>

		<scope>provided</scope>
	</dependency>
	
	<!-- 
	For exclusion
	http://stackoverflow.com/questions/17360000/provider-for-javax-xml-parsers-documentbuilderfactory-cannot-be-found -->
		<dependency>
		<groupId>org.hibernate.javax.persistence</groupId>
		<artifactId>hibernate-jpa-2.1-api</artifactId>
		<version>1.0.0.Final</version>
	</dependency>
	<dependency>
		<groupId>org.eclipse.persistence</groupId>
		<artifactId>javax.persistence</artifactId>
		<version>2.1.1</version>
	</dependency>
	
	<!-- Jackson dependencies -->
	<dependency>
    	<groupId>com.fasterxml.jackson.core</groupId>
    	<artifactId>jackson-databind</artifactId>
    	<version>${jackson.version}</version>
    	<scope>provided</scope>
	</dependency>
	<!-- These jars are not compatible with 2.5.4 in WildFly 10 -->
<!-- 	<dependency>
  		<groupId>com.fasterxml.jackson.datatype</groupId>
  		<artifactId>jackson-datatype-jdk8</artifactId>
  		<version>2.7.1</version>
  		<scope>test</scope>
	</dependency>
	<dependency>
    	<groupId>com.fasterxml.jackson.datatype</groupId>
    	<artifactId>jackson-datatype-jsr310</artifactId>
    	<version>2.7.1</version>
    	<scope>test</scope>
	</dependency>  --> 
	<dependency>
		<groupId>com.fasterxml.jackson.jaxrs</groupId>
		<artifactId>jackson-jaxrs-json-provider</artifactId>
		<version>${jackson.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.jaxrs</groupId>
		<artifactId>jackson-jaxrs-xml-provider</artifactId>
		<version>${jackson.version}</version>
		<scope>test</scope>
	</dependency>
	<!-- This is only needed for Spring -->
	<dependency>
		<groupId>com.fasterxml.jackson.dataformat</groupId>
		<artifactId>jackson-dataformat-xml</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	<!-- From http://stackoverflow.com/questions/22950542/pretty-printing-xml-with-jackson-library -->
	<dependency>
		<groupId>org.codehaus.woodstox</groupId>
		<artifactId>woodstox-core-asl</artifactId>
		<version>4.4.1</version>
	</dependency>
	
	
	<!-- This is needed to run Hibernate validator -->
	<dependency>
		<groupId>org.glassfish.web</groupId>
		<artifactId>el-impl</artifactId>
		<version>2.2</version>
	</dependency>
	
	<!-- Jersey dependencies -->
	<dependency>
		<groupId>org.glassfish.jersey.core</groupId>
		<artifactId>jersey-client</artifactId>
		<version>${jersey.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.glassfish.jersey.media</groupId>
		<artifactId>jersey-media-json-jackson</artifactId>
		<version>${jersey.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.glassfish.jersey.media</groupId>
		<artifactId>jersey-media-json-processing</artifactId>
		<version>${jersey.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.glassfish.jersey.media</groupId>
		<artifactId>jersey-media-multipart</artifactId>
		<version>${jersey.version}</version>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>org.glassfish.hk2</groupId>
		<artifactId>hk2-api</artifactId>
		<version>2.4.0-b33</version>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.2</version>
	</dependency>
	<!-- java.lang.ClassNotFoundException: org.apache.commons.fileupload.FileItemFactory  -->
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.3.1</version>
	</dependency>
	
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>5.2.3.Final</version>
	</dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.1.0</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
	</dependency>
	<dependency>
		<groupId>org.assertj</groupId>
		<artifactId>assertj-core</artifactId>
		<version>3.2.0</version>
	</dependency>
	 
	 <!-- Test ready application with Selenium -->
<!-- 	<dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-firefox-driver</artifactId>
        <version>2.48.2</version>
    </dependency> -->
     
	<dependency>
   		<groupId>javax.el</groupId>
   		<artifactId>javax.el-api</artifactId>
 		<version>3.0.0</version>
 		<scope>test</scope>
	</dependency> 
	<dependency>
		<groupId>javax.transaction</groupId>
		<artifactId>javax.transaction-api</artifactId>
		<version>1.2</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.ejb</groupId>
		<artifactId>javax.ejb-api</artifactId>
		<version>3.2</version>
		<scope>provided</scope>
	</dependency>
	<!-- http://examples.javacodegeeks.com/enterprise-java/jws/jax-ws-spring-integration-example/ -->
	<!-- We are moving to WildFly 9 and there is Apache CXF built-in. -->
<!-- 	<dependency>
		<groupId>org.jvnet.jax-ws-commons.spring</groupId>
		<artifactId>jaxws-spring</artifactId>
		<version>1.9</version>
		<exclusions>
			<exclusion>
            	<groupId>com.sun.xml.ws</groupId>
            	<artifactId>jaxws-rt</artifactId>
        	</exclusion>
        </exclusions>
	</dependency> -->
	<!-- Necessary for schema generation in Tomcat -->
<!-- 	<dependency>
		<groupId>com.sun.xml.bind</groupId>
		<artifactId>jaxb-core</artifactId>
		<version>2.2.11</version>
	</dependency> -->

<!-- 	<dependency>
		<groupId>com.sun.istack</groupId>
		<artifactId>istack-commons-runtime</artifactId>
		<version>2.22</version>
	</dependency>
	
	<dependency>
		<groupId>com.sun.xml.bind</groupId>
		<artifactId>jaxb-impl</artifactId>
		<version>2.2.11</version>
	</dependency> -->
	
	<!-- Intended to solve Caused by: java.lang.ClassNotFoundException: com.sun.istack.localization.Localizable -->
<!-- 	<dependency>
		<groupId>com.sun.xml.ws</groupId>
		<artifactId>jaxws-rt</artifactId>
		<version>2.2.10</version>
	</dependency> -->
	<!-- 	
	<dependency>
		<groupId>com.sun.xml.stream.buffer</groupId>
		<artifactId>streambuffer</artifactId>
		<version>1.5.3</version>
	</dependency>
	<dependency>
		<groupId>com.sun.xml.txw2</groupId>
		<artifactId>txw2</artifactId>
		<version>20110809</version>
	</dependency>
	<dependency>
		<groupId>com.sun.xml.ws</groupId>
		<artifactId>policy</artifactId>
		<version>2.5</version>
	</dependency>
	<dependency>
		<groupId>org.glassfish.ha</groupId>
		<artifactId>ha-api</artifactId>
		<version>3.1.9</version>
	</dependency>
	<dependency>
		<groupId>org.glassfish.gmbal</groupId>
		<artifactId>gmbal-api-only</artifactId>
		<version>3.2.0-b003</version>
	</dependency>
	<dependency>
		<groupId>org.glassfish.external</groupId>
		<artifactId>management-api</artifactId>
		<version>3.2.1-b002</version>
	</dependency>
	<dependency>
		<groupId>org.jvnet.staxex</groupId>
		<artifactId>stax-ex</artifactId>
		<version>1.7.7</version>
	</dependency> -->
<!-- <dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-jaxrs</artifactId>
	<version>${resteasy.version}</version>
	<scope>provided</scope>
</dependency>
<dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-cdi</artifactId>
	<version>${resteasy.version}</version>
	<scope>provided</scope>
</dependency>
<dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-multipart-provider</artifactId>
	<version>${resteasy.version}</version>
	<scope>provided</scope>
</dependency> -->
<!-- <dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-jackson-provider</artifactId>
	<version>${resteasy.version}</version>
	<scope>provided</scope>
</dependency> -->
<!-- <dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-jaxb-provider</artifactId>
	<version>${resteasy.version}</version>
	com.sun.istack.localization.Localizable
		<exclusions>
        	<exclusion>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
        	</exclusion>
        	<exclusion>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-core</artifactId>
        	</exclusion>
        	<exclusion>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
        	</exclusion>        	
      </exclusions> 
</dependency>
<dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>jaxrs-api</artifactId>
	<version>3.0.12.Final</version>
	<scope>provided</scope>
</dependency>
<dependency>
	<groupId>org.jboss.resteasy</groupId>
	<artifactId>resteasy-client</artifactId>
	<version>${resteasy.version}</version>
	<scope>test</scope>
</dependency>	
	 -->

	
</dependencies>
</project>