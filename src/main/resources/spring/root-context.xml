<?xml version="1.0" encoding="UTF-8"?>
<!--
    Repository and Service layers
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/security 
 		http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
 
 <!-- ========================= RESOURCE DEFINITIONS ========================= -->
    
 <!-- This is for annotations to work -->	
<context:annotation-config />

<!-- This section enables autowiring -->	
<context:component-scan base-package="org.openbox.sf5.model" />
<context:component-scan base-package="org.openbox.sf5.dao" /> <!-- Probably this is for autowiring -->
<context:component-scan base-package="org.openbox.sf5.service" />
<context:component-scan base-package="org.openbox.sf5.common" />
<context:component-scan base-package="org.openbox.sf5.json.service" />

<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
<!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) -->
<!-- <context:property-placeholder location="classpath:data-access.properties" system-properties-mode="OVERRIDE"/> -->

<!-- application.properties are for Eclipse - file contains dev properties -->
<context:property-placeholder location="classpath:application.properties"   system-properties-mode="OVERRIDE"/>
<tx:annotation-driven transaction-manager="transactionManager"/>

	
<bean id="dataSource"
	class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="org.h2.Driver" />
	<property name="url" value="${db.jdbcUrl}" />
	<property name="username" value="sa" />
	<property name="password" value="" />
</bean>
	

	
<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan" value="org.openbox.sf5.model" />   
    <property name="configLocation"> 
		<value>classpath:hibernate.cfg.xml</value> 
    </property> 
</bean>

<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
	<property name="sessionFactory" ref="sessionFactory"/> 
</bean> 

	
<bean id="adminCheck" class="org.openbox.sf5.service.AdminCheck" init-method="initialize"></bean>

<!-- http://stackoverflow.com/questions/12123516/getting-exception-no-bean-named-springsecurityfilterchain-is-defined -->
<!-- <bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"/> -->
 

<bean id="digestFilter" class=
	"org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
<property name="userDetailsService" ref="userService"/>
<property name="authenticationEntryPoint" ref="digestEntryPoint"/>
<!-- <property name="userCache" ref="userCache"/> -->
</bean>

<bean id="digestEntryPoint" class=
	"org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
<property name="realmName" value="Contacts Realm via Digest Authentication"/>
<property name="key" value="acegi"/>
<property name="nonceValiditySeconds" value="10"/>
</bean>

<!-- Global Security Settings -->
<security:global-method-security pre-post-annotations="enabled" />
 
 
<security:http auto-config="true" use-expressions="true" disable-url-rewriting="true">

	<security:session-management invalid-session-url="/login?time=1">
    	<security:concurrency-control max-sessions="1" expired-url="/login?time=1" />
    </security:session-management>

	<security:intercept-url pattern="/login" access="isAnonymous()"/>
	<security:intercept-url pattern="/register" access="isAnonymous()"/>
	
<!-- 	<security:intercept-url pattern="/*" access="hasRole('ROLE_USER')" /> -->
	
	<!-- Anonymous access to json endpoints. -->
	<security:intercept-url pattern="/json/*" access="isAnonymous()"/>
	
	<!-- Secure access to user settings -->
<!-- 	<security:intercept-url pattern="/json/usersettings/*" access="hasRole('ROLE_USER')" /> -->
	
	<security:intercept-url pattern="/transponders*" access="hasRole('ROLE_USER')" />
	<security:logout logout-url="/logout" logout-success-url="/login" delete-cookies="JSESSIONID" invalidate-session="true"/>
	
		 
	<security:form-login 
		login-page= '/login' 
		default-target-url="/"
		authentication-failure-url='/login.jsp?error=true'
		always-use-default-target='true'
 	/>
	
	<!-- enable csrf protection -->
	<security:csrf/>
</security:http>

 
    <!-- the security namespace configuration -->
    <security:http use-expressions="true" entry-point-ref="digestEntryPoint">
        <security:intercept-url pattern="/json/usersettings/*" access="hasRole('ROLE_USER')" />
         <security:custom-filter ref="digestFilter" after="BASIC_AUTH_FILTER" />
    </security:http>
 
 
<security:authentication-manager  alias="authenticationManager">
	<security:authentication-provider>
	<security:jdbc-user-service id="userService"
		data-source-ref="dataSource"
		users-by-username-query="
			select	username, password, enabled from users	where username =?"
		authorities-by-username-query="select username, authority from usersauthorities where username =?" />
	</security:authentication-provider>
</security:authentication-manager>	
   
</beans>    